{"app": "common",
 "inst": [
  {"guard_name": "CORE_WRAPPERS_QuadraticExtension", "include": ["polymake/QuadraticExtension.h"], "pkg": "Polymake::common::QuadraticExtension", "wrapper_file": "include/core-wrappers/polymake/QuadraticExtension.h"},
  {"class": "QuadraticExtension<Rational>", "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "pkg": "Polymake::common::QuadraticExtension__Rational"},
  {"args": ["QuadraticExtension<Rational>", "perl::Canned<const Rational&>", "perl::Canned<const Rational&>", "Int"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "new", "sig": "new.X.X.X"},
  {"args": ["QuadraticExtension<Rational>", "Int", "perl::Canned<const Rational&>", "Int"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "new", "sig": "new.X.X.X"},
  {"args": ["QuadraticExtension<Rational>", "QuadraticExtension<Rational>(Int)"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "new", "sig": "new.C0"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "neg", "sig": "neg:O.X"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "perl::Canned<const QuadraticExtension<Rational>&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "_eq", "sig": "_eq:O.X.X"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "perl::Canned<const QuadraticExtension<Rational>&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "_ne", "sig": "_ne:O.X.X"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "perl::Canned<const QuadraticExtension<Rational>&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "_lt", "sig": "_lt:O.X.X"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "perl::Canned<const QuadraticExtension<Rational>&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "_gt", "sig": "_gt:O.X.X"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "perl::Canned<const QuadraticExtension<Rational>&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "_le", "sig": "_le:O.X.X"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "perl::Canned<const QuadraticExtension<Rational>&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "_ge", "sig": "_ge:O.X.X"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "perl::Canned<const Rational&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "_eq", "sig": "_eq:O.X.X"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "perl::Canned<const Rational&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "_ne", "sig": "_ne:O.X.X"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "perl::Canned<const Rational&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "_lt", "sig": "_lt:O.X.X"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "perl::Canned<const Rational&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "_gt", "sig": "_gt:O.X.X"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "perl::Canned<const Rational&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "_le", "sig": "_le:O.X.X"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "perl::Canned<const Rational&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "_ge", "sig": "_ge:O.X.X"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "_eq", "sig": "_eq:O.X.X"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "_ne", "sig": "_ne:O.X.X"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "_lt", "sig": "_lt:O.X.X"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "_gt", "sig": "_gt:O.X.X"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "_le", "sig": "_le:O.X.X"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "_ge", "sig": "_ge:O.X.X"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "Int"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "_eq", "sig": "_eq:O.X.X"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "Int"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "_ne", "sig": "_ne:O.X.X"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "Int"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "_lt", "sig": "_lt:O.X.X"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "Int"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "_gt", "sig": "_gt:O.X.X"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "Int"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "_le", "sig": "_le:O.X.X"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "Int"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "_ge", "sig": "_ge:O.X.X"},
  {"args": ["QuadraticExtension<Rational>", "QuadraticExtension<Rational>(perl::Canned<const Rational&>)"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "new", "sig": "new.C0"},
  {"args": ["QuadraticExtension<Rational>", "Int", "Int", "Int"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "new", "sig": "new.X.X.X"},
  {"args": ["QuadraticExtension<Rational>", "perl::Canned<const Rational&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["QuadraticExtension<Rational>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "perl::Canned<const Polynomial<QuadraticExtension<Rational>, Int>&>"], "include": ["polymake/Polynomial.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "mul", "sig": "mul:O.X.X16"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "perl::Canned<const QuadraticExtension<Rational>&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "add", "sig": "add:O.X.X16"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "perl::Canned<const Rational&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "add", "sig": "add:O.X.X16"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "add", "sig": "add:O.X.X16"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "perl::Canned<const QuadraticExtension<Rational>&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "sub", "sig": "sub:O.X.X16"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "perl::Canned<const Rational&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "sub", "sig": "sub:O.X.X16"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "sub", "sig": "sub:O.X.X16"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "perl::Canned<const QuadraticExtension<Rational>&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "mul", "sig": "mul:O.X.X16"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "perl::Canned<const Rational&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "mul", "sig": "mul:O.X.X16"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "mul", "sig": "mul:O.X.X16"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "perl::Canned<const QuadraticExtension<Rational>&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "div", "sig": "div:O.X.X16"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "perl::Canned<const Rational&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "div", "sig": "div:O.X.X16"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "div", "sig": "div:O.X.X16"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "Int"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "add", "sig": "add:O.X.X16"},
  {"args": ["Int", "perl::Canned<const QuadraticExtension<Rational>&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "add", "sig": "add:O.X.X16"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "Int"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "sub", "sig": "sub:O.X.X16"},
  {"args": ["Int", "perl::Canned<const QuadraticExtension<Rational>&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "sub", "sig": "sub:O.X.X16"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "Int"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "mul", "sig": "mul:O.X.X16"},
  {"args": ["Int", "perl::Canned<const QuadraticExtension<Rational>&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "mul", "sig": "mul:O.X.X16"},
  {"args": ["perl::Canned<const QuadraticExtension<Rational>&>", "Int"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "div", "sig": "div:O.X.X16"},
  {"args": ["Int", "perl::Canned<const QuadraticExtension<Rational>&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "div", "sig": "div:O.X.X16"},
  {"args": ["QuadraticExtension<Rational>", "Int", "perl::Canned<const Rational&>", "perl::Canned<const Rational&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "new", "sig": "new.X.X.X"},
  {"args": ["QuadraticExtension<Rational>", "Int", "Int", "perl::Canned<const Rational&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "new", "sig": "new.X.X.X"},
 null ],
"version": 3}
