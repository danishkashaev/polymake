{"app": "common",
 "inst": [
  {"args": ["perl::Canned<const pm::unary_transform_iterator<pm::graph::valid_node_iterator<pm::iterator_range<pm::ptr_wrapper<pm::graph::node_entry<pm::graph::Directed, (pm::sparse2d::restriction_kind)0> const, false> >, pm::BuildUnary<pm::graph::valid_node_selector> >, pm::graph::line_factory<std::integral_constant<bool, true>, pm::incidence_line, void> >&>"], "func": "index", "include": ["polymake/Graph.h"], "kind": "meth", "sig": "index:M"},
  {"args": ["perl::Canned<const pm::unary_transform_iterator<pm::graph::valid_node_iterator<pm::iterator_range<pm::ptr_wrapper<pm::graph::node_entry<pm::graph::DirectedMulti, (pm::sparse2d::restriction_kind)0> const, false> >, pm::BuildUnary<pm::graph::valid_node_selector> >, pm::graph::line_factory<std::integral_constant<bool, true>, pm::graph::multi_adjacency_line, void> >&>"], "func": "index", "include": ["polymake/Graph.h"], "kind": "meth", "sig": "index:M"},
  {"args": ["perl::Canned<const pm::range_folder<pm::unary_transform_iterator<pm::AVL::tree_iterator<pm::graph::it_traits<pm::graph::DirectedMulti, true> const, (pm::AVL::link_index)1>, std::pair<pm::graph::edge_accessor, pm::BuildUnaryIt<pm::sparse2d::cell_index_accessor> > >, pm::equal_index_folder>&>"], "func": "index", "include": ["polymake/Graph.h"], "kind": "meth", "sig": "index:M"},
  {"args": ["perl::Canned<const pm::unary_transform_iterator<pm::graph::valid_node_iterator<pm::iterator_range<pm::ptr_wrapper<pm::graph::node_entry<pm::graph::Undirected, (pm::sparse2d::restriction_kind)0> const, false> >, pm::BuildUnary<pm::graph::valid_node_selector> >, pm::graph::line_factory<std::integral_constant<bool, true>, pm::incidence_line, void> >&>"], "func": "index", "include": ["polymake/Graph.h"], "kind": "meth", "sig": "index:M"},
  {"args": ["perl::Canned<const pm::unary_transform_iterator<pm::graph::valid_node_iterator<pm::iterator_range<pm::ptr_wrapper<pm::graph::node_entry<pm::graph::UndirectedMulti, (pm::sparse2d::restriction_kind)0> const, false> >, pm::BuildUnary<pm::graph::valid_node_selector> >, pm::graph::line_factory<std::integral_constant<bool, true>, pm::graph::multi_adjacency_line, void> >&>"], "func": "index", "include": ["polymake/Graph.h"], "kind": "meth", "sig": "index:M"},
  {"args": ["perl::Canned<const pm::range_folder<pm::unary_transform_iterator<pm::AVL::tree_iterator<pm::graph::it_traits<pm::graph::UndirectedMulti, false> const, (pm::AVL::link_index)1>, std::pair<pm::graph::edge_accessor, pm::BuildUnaryIt<pm::sparse2d::cell_index_accessor> > >, pm::equal_index_folder>&>"], "func": "index", "include": ["polymake/Graph.h"], "kind": "meth", "sig": "index:M"},
  {"args": ["perl::Canned<const pm::unary_transform_iterator<pm::AVL::tree_iterator<pm::sparse2d::it_traits<pm::Rational, true, false> const, (pm::AVL::link_index)1>, std::pair<pm::BuildUnary<pm::sparse2d::cell_accessor>, pm::BuildUnaryIt<pm::sparse2d::cell_index_accessor> > >&>"], "func": "index", "include": ["polymake/IncidenceMatrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "kind": "meth", "sig": "index:M"},
  {"args": ["perl::Canned<const pm::unary_transform_iterator<pm::AVL::tree_iterator<pm::sparse2d::it_traits<pm::Integer, true, false> const, (pm::AVL::link_index)1>, std::pair<pm::BuildUnary<pm::sparse2d::cell_accessor>, pm::BuildUnaryIt<pm::sparse2d::cell_index_accessor> > >&>"], "func": "index", "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/SparseMatrix.h"], "kind": "meth", "sig": "index:M"},
  {"args": ["perl::Canned<const pm::unary_transform_iterator<pm::AVL::tree_iterator<pm::AVL::it_traits<Int, Int> const, (pm::AVL::link_index)1>, std::pair<pm::BuildUnary<pm::sparse_vector_accessor>, pm::BuildUnary<pm::sparse_vector_index_accessor> > >&>"], "func": "index", "include": ["polymake/SparseVector.h"], "kind": "meth", "sig": "index:M"},
  {"args": ["perl::Canned<const pm::unary_transform_iterator<pm::AVL::tree_iterator<pm::sparse2d::it_traits<Int, true, false> const, (pm::AVL::link_index)1>, std::pair<pm::BuildUnary<pm::sparse2d::cell_accessor>, pm::BuildUnaryIt<pm::sparse2d::cell_index_accessor> > >&>"], "func": "index", "include": ["polymake/IncidenceMatrix.h", "polymake/SparseMatrix.h"], "kind": "meth", "sig": "index:M"},
  {"args": ["perl::Canned<const pm::unary_transform_iterator<pm::AVL::tree_iterator<pm::sparse2d::it_traits<pm::QuadraticExtension<pm::Rational>, true, false> const, (pm::AVL::link_index)1>, std::pair<pm::BuildUnary<pm::sparse2d::cell_accessor>, pm::BuildUnaryIt<pm::sparse2d::cell_index_accessor> > >&>"], "func": "index", "include": ["polymake/IncidenceMatrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "kind": "meth", "sig": "index:M"},
  {"args": ["perl::Canned<const pm::unary_transform_iterator<pm::AVL::tree_iterator<pm::AVL::it_traits<Int, pm::Rational> const, (pm::AVL::link_index)1>, std::pair<pm::BuildUnary<pm::sparse_vector_accessor>, pm::BuildUnary<pm::sparse_vector_index_accessor> > >&>"], "func": "index", "include": ["polymake/Rational.h", "polymake/SparseVector.h"], "kind": "meth", "sig": "index:M"},
  {"args": ["perl::Canned<const pm::unary_transform_iterator<pm::AVL::tree_iterator<pm::AVL::it_traits<Int, pm::Integer> const, (pm::AVL::link_index)1>, std::pair<pm::BuildUnary<pm::sparse_vector_accessor>, pm::BuildUnary<pm::sparse_vector_index_accessor> > >&>"], "func": "index", "include": ["polymake/Integer.h", "polymake/SparseVector.h"], "kind": "meth", "sig": "index:M"},
  {"args": ["perl::Canned<const pm::unary_transform_iterator<pm::AVL::tree_iterator<pm::AVL::it_traits<Int, double> const, (pm::AVL::link_index)1>, std::pair<pm::BuildUnary<pm::sparse_vector_accessor>, pm::BuildUnary<pm::sparse_vector_index_accessor> > >&>"], "func": "index", "include": ["polymake/SparseVector.h"], "kind": "meth", "sig": "index:M"},
  {"args": ["perl::Canned<const pm::unary_transform_iterator<pm::AVL::tree_iterator<pm::sparse2d::it_traits<double, true, false> const, (pm::AVL::link_index)1>, std::pair<pm::BuildUnary<pm::sparse2d::cell_accessor>, pm::BuildUnaryIt<pm::sparse2d::cell_index_accessor> > >&>"], "func": "index", "include": ["polymake/IncidenceMatrix.h", "polymake/SparseMatrix.h"], "kind": "meth", "sig": "index:M"},
  {"args": ["perl::Canned<const pm::unary_transform_iterator<pm::AVL::tree_iterator<pm::AVL::it_traits<Int, pm::PuiseuxFraction<pm::Min, pm::Rational, pm::Rational> > const, (pm::AVL::link_index)1>, std::pair<pm::BuildUnary<pm::sparse_vector_accessor>, pm::BuildUnary<pm::sparse_vector_index_accessor> > >&>"], "func": "index", "include": ["polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/SparseVector.h", "polymake/TropicalNumber.h"], "kind": "meth", "sig": "index:M"},
  {"args": ["perl::Canned<const pm::unary_transform_iterator<pm::AVL::tree_iterator<pm::AVL::it_traits<Int, pm::QuadraticExtension<pm::Rational> > const, (pm::AVL::link_index)1>, std::pair<pm::BuildUnary<pm::sparse_vector_accessor>, pm::BuildUnary<pm::sparse_vector_index_accessor> > >&>"], "func": "index", "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/SparseVector.h"], "kind": "meth", "sig": "index:M"},
  {"args": ["perl::Canned<const pm::unary_transform_iterator<pm::AVL::tree_iterator<pm::sparse2d::it_traits<pm::PuiseuxFraction<pm::Max, pm::Rational, pm::Rational>, true, false> const, (pm::AVL::link_index)1>, std::pair<pm::BuildUnary<pm::sparse2d::cell_accessor>, pm::BuildUnaryIt<pm::sparse2d::cell_index_accessor> > >&>"], "func": "index", "include": ["polymake/IncidenceMatrix.h", "polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/SparseMatrix.h", "polymake/TropicalNumber.h"], "kind": "meth", "sig": "index:M"},
  {"args": ["perl::Canned<const pm::unary_transform_iterator<pm::AVL::tree_iterator<pm::sparse2d::it_traits<pm::TropicalNumber<pm::Max, pm::Rational>, false, true> const, (pm::AVL::link_index)1>, std::pair<pm::BuildUnary<pm::sparse2d::cell_accessor>, pm::BuildUnaryIt<pm::sparse2d::cell_index_accessor> > >&>"], "func": "index", "include": ["polymake/IncidenceMatrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h", "polymake/TropicalNumber.h"], "kind": "meth", "sig": "index:M"},
  {"args": ["perl::Canned<const pm::unary_transform_iterator<pm::AVL::tree_iterator<pm::sparse2d::it_traits<pm::TropicalNumber<pm::Min, pm::Rational>, false, true> const, (pm::AVL::link_index)1>, std::pair<pm::BuildUnary<pm::sparse2d::cell_accessor>, pm::BuildUnaryIt<pm::sparse2d::cell_index_accessor> > >&>"], "func": "index", "include": ["polymake/IncidenceMatrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h", "polymake/TropicalNumber.h"], "kind": "meth", "sig": "index:M"},
  {"args": ["perl::Canned<const pm::unary_transform_iterator<pm::AVL::tree_iterator<pm::AVL::it_traits<Int, pm::TropicalNumber<pm::Min, pm::Rational> > const, (pm::AVL::link_index)1>, std::pair<pm::BuildUnary<pm::sparse_vector_accessor>, pm::BuildUnary<pm::sparse_vector_index_accessor> > >&>"], "func": "index", "include": ["polymake/Rational.h", "polymake/SparseVector.h", "polymake/TropicalNumber.h"], "kind": "meth", "sig": "index:M"},
  {"args": ["perl::Canned<const pm::unary_transform_iterator<pm::AVL::tree_iterator<pm::AVL::it_traits<Int, pm::PuiseuxFraction<pm::Max, pm::Rational, pm::Rational> > const, (pm::AVL::link_index)1>, std::pair<pm::BuildUnary<pm::sparse_vector_accessor>, pm::BuildUnary<pm::sparse_vector_index_accessor> > >&>"], "func": "index", "include": ["polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/SparseVector.h", "polymake/TropicalNumber.h"], "kind": "meth", "sig": "index:M"},
  {"args": ["perl::Canned<const pm::unary_transform_iterator<pm::AVL::tree_iterator<pm::sparse2d::it_traits<pm::Integer, false, true> const, (pm::AVL::link_index)1>, std::pair<pm::BuildUnary<pm::sparse2d::cell_accessor>, pm::BuildUnaryIt<pm::sparse2d::cell_index_accessor> > >&>"], "func": "index", "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/SparseMatrix.h"], "kind": "meth", "sig": "index:M"},
  {"args": ["perl::Canned<const pm::unary_transform_iterator<pm::AVL::tree_iterator<pm::sparse2d::it_traits<pm::GF2, true, false> const, (pm::AVL::link_index)1>, std::pair<pm::BuildUnary<pm::sparse2d::cell_accessor>, pm::BuildUnaryIt<pm::sparse2d::cell_index_accessor> > >&>"], "func": "index", "include": ["polymake/GF2.h", "polymake/IncidenceMatrix.h", "polymake/SparseMatrix.h"], "kind": "meth", "sig": "index:M"},
 null ],
"version": 3}
